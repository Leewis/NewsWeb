@inherits Umbraco.Web.Macros.PartialViewMacroPage
@using Umbraco.Examine
@{
    var searchTerm = string.Empty;
    var category = string.Empty;

    searchTerm = string.IsNullOrEmpty(Request["q"]) ? string.Empty : Request["q"];
    category = string.IsNullOrEmpty(Request["cat"]) ? string.Empty : Request["cat"];
    var _results = Model.Content.Descendants().ToArray();

    if (searchTerm == string.Empty)
    {
        <p>Enter search term</p>
    }
    else
    {

        var filter = new[] { "title", "shortDescription", "fullDescription", "source", "sourceUrl", "category", "author" };
        if (ExamineManager.Instance.TryGetIndex("ExternalIndex", out var index))
        {
            var searcher = index.GetSearcher();
            System.Text.RegularExpressions.Regex regex = new System.Text.RegularExpressions.Regex("\\p{IsCombiningDiacriticalMarks}+");
            string temp = searchTerm.Normalize(System.Text.NormalizationForm.FormD);
            var tempSearch = regex.Replace(temp, String.Empty).Replace('\u0111', 'd').Replace('\u0110', 'D');

            var results = searcher.CreateQuery("content").NodeTypeAlias("news").And().GroupedOr(filter, tempSearch).Execute().ToArray();
            Array.Clear(_results, 0, _results.Count());

            if (category != string.Empty)
            {
                var typeCategories = searcher.CreateQuery("content").NodeTypeAlias("category").And().Field("nodeName", category).Execute();
                if (typeCategories.Any())
                {
                    foreach (var cate in typeCategories)
                    {
                        if (cate.Id != null)
                        {
                            var parentId = 0;
                            int.TryParse(cate.Id.ToString(), out parentId);
                            _results = Umbraco.Content(parentId)
                                                    .Descendants().Where(x => x.IsVisible()
                                                                    && x.ContentType.Alias == "news"
                                                                    && x.Properties.Any(y => y.GetValue() != null
                                                                                           && y.GetValue().ToString().Contains(tempSearch))).ToArray();

                            //results.Add(searcher.CreateQuery("content").ParentId(parentId).And().GroupedOr(filter, searchTerm).Execute());

                        }
                    }
                }
            }
            if (_results.Any())
            {
                foreach (var result in _results)
                {
                    //var node = Umbraco.Content(result.Id);
                    <div class="post-list">
                        <article class="post-item d-flex">
                            <div class="col-desc mr-5 col-md-8">
                                <h5 class="merri-title">
                                    <a href="@result.Url()">@result.GetProperty("title").Value()</a>
                                </h5>
                                <p>
                                    <a href="@result.Url()">
                                        @result.GetProperty("shortDescription").Value()
                                    </a>
                                </p>
                            </div>
                            @if (result.GetProperty("Picture").HasValue())
                            {
                                <div class="col-img mr-3 col-md-4">
                                    <a href="#" class="mr-3 img-thumb"><img src="@result.GetProperty("Picture").Value()" alt="" class="img-fluid" style='max-height: 100%; max-width: 100%; object-fit: contain'></a>
                                </div>
                            }
                        </article>
                    </div>
                    <div class="bt-solid mt-3 mb-3"></div>
                }
            }
            else if (results.Any())
            {
                foreach (var result in results)
                {
                    if (result.Id != null)
                    {
                        var node = Umbraco.Content(result.Id);
                        <div class="post-list">
                            <article class="post-item d-flex">
                                <div class="col-desc mr-5 col-md-8">
                                    <h5 class="merri-title">
                                        <a href="@node.Url()">@node.GetProperty("title").Value()</a>
                                    </h5>
                                    <p>
                                        <a href="@node.Url()">
                                            @node.GetProperty("shortDescription").Value()
                                        </a>
                                    </p>
                                </div>
                                @if (node.GetProperty("Picture").HasValue())
                                {
                                    <div class="col-img mr-3 col-md-4">
                                        <a href="#" class="mr-3 img-thumb"><img src="@node.GetProperty("Picture").Value()" alt="" class="img-fluid" style='max-height: 100%; max-width: 100%; object-fit: contain'></a>
                                    </div>
                                }
                            </article>
                        </div>
                        <div class="bt-solid mt-3 mb-3"></div>
                    }
                }

            }
            else
            {
                <p>No results found for query @searchTerm</p>
            }
        }
        return;

    }
}